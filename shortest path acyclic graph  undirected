class Solution {
  public:
    // Function to find the shortest path from source to all other nodes
    vector<int> shortestPath(vector<vector<int>>& adj, int src) {
        // code here
         int v = adj.size();
        
        vector<int> paths(v, -1);
        paths[src] = 0;
        
        vector<bool> visited(v, false);
        visited[src] = true;
        
        queue<int> q;
        q.push(src);
        while(!q.empty()){
            int size = q.size();
            while(size--){
                int node = q.front();
                q.pop();
                
                for(int ngb : adj[node]){
                    if(!visited[ngb]){
                        q.push(ngb);
                        visited[ngb] = true;
                        paths[ngb] = paths[node]+1;
                    }
                }
            }
        }
        
        return paths;
    }
};
